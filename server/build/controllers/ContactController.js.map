{"version":3,"sources":["../../src/controllers/ContactController.js"],"names":["users","models","contacts","ContactController","req","res","body","receiverId","title","message","senderId","decode","id","findById","then","user","receiver","create","newMessage","catch","userId","parseInt","findAll","where","type","messages","length","clientsInfo","forEach","messageObj","getClient","sender","push"],"mappings":"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","file":"ContactController.js","sourcesContent":["import models from './../models/index';\nimport { handleResponse } from './../services/services';\n\nconst { users, contacts } = models;\n/* eslint-disable consistent-return */\nconst ContactController = class {\n  // create a new message\n  static addMessage(req, res) {\n    const {\n      receiverId,\n      title,\n      message,\n    } = req.body;\n    // sender is user with token\n    const senderId = req.body.decode.id;\n    return users\n      .findById(senderId)\n      .then((user) => {\n        if (user) {\n          return users\n            .findById(receiverId)\n            .then((receiver) => {\n              if (receiver) {\n                return contacts\n                  .create({\n                    receiverId,\n                    senderId,\n                    message,\n                    title,\n                  })\n                  .then((newMessage) => {\n                    return handleResponse(res, 201, newMessage);\n                  })\n                  .catch(() => handleResponse(res, 500, 'something went wrong. please try again'));\n              }\n              return handleResponse(res, 404, 'receiver does not exist');\n            });\n        }\n        return handleResponse(res, 404, 'Your identity could not be verified. Please make sure you are logged in');\n      })\n      .catch(() => handleResponse(res, 500, 'something went wrong. please try again'));\n  }\n\n  static getMessages(req, res) {\n    const userId = parseInt(req.body.decode.id, 10);\n    return contacts\n      .findAll({\n        where: {\n          senderId: userId,\n          receiverId: userId,\n        },\n        type: 'or',\n      })\n      .then((messages) => {\n        if (messages) {\n          // no messages has been send or received\n          if (messages.length === 0) {\n            return handleResponse(res, 200, []);\n          }\n          const clientsInfo = [];\n          messages.forEach((message) => {\n            // object to hold message sender and receiver\n            const messageObj = {};\n            messageObj.message = message;\n\n            // get info of message sender\n            return users\n              .getClient(message.senderId)\n              .then((sender) => {\n                return sender;\n              })\n              .then((sender) => {\n                if (sender) {\n                  messageObj.sender = sender;\n                } else {\n                  messageObj.sender = { message: 'user not found' };\n                }\n              })\n              .then(() => {\n                // get info of message receiver\n                return users\n                  .getClient(message.receiverId)\n                  .then((receiver) => {\n                    return receiver;\n                  })\n                  .then((receiver) => {\n                    if (receiver) {\n                      messageObj.receiver = receiver;\n                    } else {\n                      messageObj.receiver = { message: 'user not found' };\n                    }\n\n                    // push messageObj to collection\n                    clientsInfo.push(messageObj);\n                    if (clientsInfo.length === messages.length) {\n                      return handleResponse(res, 200, clientsInfo);\n                    }\n                  });\n              });\n          });\n        }\n      })\n      .catch(() => handleResponse(res, 500, 'something went wrong. please try again'));\n  }\n};\n\nexport default ContactController;\n"]}