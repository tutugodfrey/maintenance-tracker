{"version":3,"sources":["../../src/middlewares/validateUsers.js"],"names":["validateSignup","req","res","next","body","fullname","username","email","address","phone","password","confirmPassword","isAdmin","serviceName","trim","emailRegExp","match","length","Boolean","imgUrl","file","path","validateSignin"],"mappings":";;;;;;;AAAA;;AAEO,IAAMA,0CAAiB,SAAjBA,cAAiB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAAA,kBAW5CF,IAAIG,IAXwC;AAAA,MAE9CC,QAF8C,aAE9CA,QAF8C;AAAA,MAG9CC,QAH8C,aAG9CA,QAH8C;AAAA,MAI9CC,KAJ8C,aAI9CA,KAJ8C;AAAA,MAK9CC,OAL8C,aAK9CA,OAL8C;AAAA,MAM9CC,KAN8C,aAM9CA,KAN8C;AAAA,MAO9CC,QAP8C,aAO9CA,QAP8C;AAAA,MAQ9CC,eAR8C,aAQ9CA,eAR8C;AAAA,MAS9CC,OAT8C,aAS9CA,OAT8C;AAAA,MAU9CC,WAV8C,aAU9CA,WAV8C;;;AAahD,MAAIP,SAASQ,IAAT,OAAoB,EAApB,IAA0BT,SAASS,IAAT,OAAoB,EAA9C,IAAoDP,MAAMO,IAAN,OAAiB,EAArE,IACDJ,SAASI,IAAT,OAAoB,EADnB,IACyBH,gBAAgBG,IAAhB,OAA2B,EADpD,IAC0DN,QAAQM,IAAR,OAAmB,EAD7E,IACmFL,MAAMK,IAAN,OAAiB,EADxG,EAC4G;AAC1G,WAAO,8BAAeZ,GAAf,EAAoB,GAApB,EAAyB,wBAAzB,CAAP;AACD;AACD,MAAMa,cAAc,wBAApB;AACA,MAAI,CAACR,MAAMS,KAAN,CAAYD,WAAZ,CAAL,EAA+B;AAC7B,WAAO,8BAAeb,GAAf,EAAoB,GAApB,EAAyB,iCAAzB,CAAP;AACD;;AAED,MAAIQ,SAASO,MAAT,GAAkB,CAAlB,IAAuBN,gBAAgBM,MAAhB,GAAyB,CAApD,EAAuD;AACrD,WAAO,8BAAef,GAAf,EAAoB,GAApB,EAAyB,4CAAzB,CAAP;AACD;;AAED,MAAIQ,aAAaC,eAAjB,EAAkC;AAChC,WAAO,8BAAeT,GAAf,EAAoB,GAApB,EAAyB,yBAAzB,CAAP;AACD;;AAED,MAAI,CAACU,OAAD,IAAYA,QAAQE,IAAR,OAAmB,EAAnC,EAAuC;AACrC,WAAO,8BAAeZ,GAAf,EAAoB,GAApB,EAAyB,+BAAzB,CAAP;AACD;;AAED,MAAI,CAACU,OAAL,EAAc;AACZX,QAAIG,IAAJ,CAASS,WAAT,GAAuB,EAAvB;AACD;;AAED,MAAIK,QAAQN,OAAR,KAAoBC,YAAYC,IAAZ,OAAuB,EAA/C,EAAmD;AACjD,WAAO,8BAAeZ,GAAf,EAAoB,GAApB,EAAyB,oEAAzB,CAAP;AACD;AACD;AACA,MAAIiB,SAAS,0BAAb;AACA,MAAIlB,IAAImB,IAAR,EAAc;AACd;AACED,aAAS,yBAAUlB,IAAImB,IAAJ,CAASC,IAAnB,CAAT;AACD;AACDpB,MAAIG,IAAJ,CAASe,MAAT,GAAkBA,MAAlB;AACA,SAAOhB,MAAP;AACD,CAjDM;;AAmDA,IAAMmB,0CAAiB,SAAjBA,cAAiB,CAACrB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAAA,mBAI5CF,IAAIG,IAJwC;AAAA,MAE9CE,QAF8C,cAE9CA,QAF8C;AAAA,MAG9CI,QAH8C,cAG9CA,QAH8C;;AAKhD,MAAIJ,SAASQ,IAAT,OAAoB,EAApB,IAA0BJ,SAASI,IAAT,OAAoB,EAAlD,EAAsD;AACpD,WAAO,8BAAeZ,GAAf,EAAoB,GAApB,EAAyB,wBAAzB,CAAP;AACD;;AAED,SAAOC,MAAP;AACD,CAVM","file":"validateUsers.js","sourcesContent":["import { getImgUrl, handleResponse } from './../services/services';\r\n\r\nexport const validateSignup = (req, res, next) => {\r\n  const {\r\n    fullname,\r\n    username,\r\n    email,\r\n    address,\r\n    phone,\r\n    password,\r\n    confirmPassword,\r\n    isAdmin,\r\n    serviceName,\r\n  } = req.body;\r\n\r\n  if (username.trim() === '' || fullname.trim() === '' || email.trim() === ''\r\n  || password.trim() === '' || confirmPassword.trim() === '' || address.trim() === '' || phone.trim() === '') {\r\n    return handleResponse(res, 400, 'missing required field');\r\n  }\r\n  const emailRegExp = /\\w+@\\w+\\.(net|com|org)/;\r\n  if (!email.match(emailRegExp)) {\r\n    return handleResponse(res, 400, 'typeError: invalid email format');\r\n  }\r\n\r\n  if (password.length < 6 || confirmPassword.length < 6) {\r\n    return handleResponse(res, 400, 'length of password must not be less than 6');\r\n  }\r\n\r\n  if (password !== confirmPassword) {\r\n    return handleResponse(res, 400, 'password does not match');\r\n  }\r\n\r\n  if (!isAdmin && isAdmin.trim() !== '') {\r\n    return handleResponse(res, 400, 'isAdmin must be a true if set');\r\n  }\r\n\r\n  if (!isAdmin) {\r\n    req.body.serviceName = '';\r\n  }\r\n\r\n  if (Boolean(isAdmin) && serviceName.trim() === '') {\r\n    return handleResponse(res, 400, 'please provide a service name for users to recognize your services');\r\n  }\r\n  // console.log(req.body)\r\n  let imgUrl = '/users-photo/default.png';\r\n  if (req.file) {\r\n  // get path to updated file\r\n    imgUrl = getImgUrl(req.file.path);\r\n  }\r\n  req.body.imgUrl = imgUrl;\r\n  return next();\r\n};\r\n\r\nexport const validateSignin = (req, res, next) => {\r\n  const {\r\n    username,\r\n    password,\r\n  } = req.body;\r\n  if (username.trim() === '' || password.trim() === '') {\r\n    return handleResponse(res, 400, 'missing required field');\r\n  }\r\n\r\n  return next();\r\n};\r\n"]}