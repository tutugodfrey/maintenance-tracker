{"version":3,"sources":["../../src/routes/index.js"],"names":["Routes","UsersController","RequestController","ContactController","AdminController","app","get","req","res","status","sendFile","path","join","__dirname","post","usersUpload","single","signup","signin","getServiceName","secureRoute","getAllRequests","put","rejectRequest","approveRequest","resolveRequest","addRequest","getOneRequest","updateRequest","delete","deleteRequest","addMessage","getMessages"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA;AACA,IAAMA;AACJ,oBAAc;AAAA;;AACZ,SAAKC,eAAL,GAAuBA,yBAAvB;AACA,SAAKC,iBAAL,GAAyBA,2BAAzB;AACA,SAAKC,iBAAL,GAAyBA,2BAAzB;AACA,SAAKC,eAAL,GAAuBA,yBAAvB;AACD;AACD;;;AAPI;AAAA;AAAA,2BAQGC,GARH,EAQQ;AACVA,UAAIC,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,YAAIC,MAAJ,CAAW,GAAX,EAAgBC,QAAhB,CAAyBC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,8BAArB,CAAzB;AACD,OAFD;AAGA;AACAR,UAAIS,IAAJ,CAAS,qBAAT,EAAgCC,qBAAYC,MAAZ,CAAmB,eAAnB,CAAhC,EAAqE,KAAKf,eAAL,CAAqBgB,MAA1F;AACAZ,UAAIS,IAAJ,CAAS,qBAAT,EAAgC,KAAKb,eAAL,CAAqBiB,MAArD;AACAb,UAAIC,GAAJ,CAAQ,uBAAR,EAAiC,KAAKL,eAAL,CAAqBkB,cAAtD;;AAEA;AACAd,UAAIC,GAAJ,CAAQ,kBAAR,EAA4Bc,kBAA5B,EAAyC,KAAKhB,eAAL,CAAqBiB,cAA9D;AACAhB,UAAIiB,GAAJ,CAAQ,wCAAR,EAAkDF,kBAAlD,EAA+D,KAAKhB,eAAL,CAAqBmB,aAApF;AACAlB,UAAIiB,GAAJ,CAAQ,qCAAR,EAA+CF,kBAA/C,EAA4D,KAAKhB,eAAL,CAAqBoB,cAAjF;AACAnB,UAAIiB,GAAJ,CAAQ,qCAAR,EAA+CF,kBAA/C,EAA4D,KAAKhB,eAAL,CAAqBqB,cAAjF;;AAEA;AACApB,UAAIS,IAAJ,CAAS,wBAAT,EAAmCM,kBAAnC,EAAgD,KAAKlB,iBAAL,CAAuBwB,UAAvE;AACArB,UAAIC,GAAJ,CAAQ,mCAAR,EAA6Cc,kBAA7C,EAA0D,KAAKlB,iBAAL,CAAuByB,aAAjF;AACAtB,UAAIC,GAAJ,CAAQ,wBAAR,EAAkCc,kBAAlC,EAA+C,KAAKlB,iBAAL,CAAuBmB,cAAtE;AACAhB,UAAIiB,GAAJ,CAAQ,mCAAR,EAA6CF,kBAA7C,EAA0D,KAAKlB,iBAAL,CAAuB0B,aAAjF;AACAvB,UAAIwB,MAAJ,CAAW,mCAAX,EAAgDT,kBAAhD,EAA6D,KAAKlB,iBAAL,CAAuB4B,aAApF;AACA;AACAzB,UAAIS,IAAJ,CAAS,kBAAT,EAA6BM,kBAA7B,EAA0C,KAAKjB,iBAAL,CAAuB4B,UAAjE;AACA1B,UAAIC,GAAJ,CAAQ,kBAAR,EAA4Bc,kBAA5B,EAAyC,KAAKjB,iBAAL,CAAuB6B,WAAhE;AACD;AAhCG;;AAAA;AAAA,GAAN;;kBAmCehC,M","file":"index.js","sourcesContent":["import path from 'path';\r\nimport UsersController from './../controllers/UsersController';\r\nimport RequestController from './../controllers/RequestController';\r\nimport ContactController from './../controllers/ContactController';\r\nimport AdminController from './../controllers/AdminController';\r\nimport secureRoute from './../middlewares/getToken';\r\nimport usersUpload from './../middlewares/uploadfile';\r\n\r\n// const requestController = new RequestController();\r\nconst Routes = class {\r\n  constructor() {\r\n    this.UsersController = UsersController;\r\n    this.RequestController = RequestController;\r\n    this.ContactController = ContactController;\r\n    this.AdminController = AdminController;\r\n  }\r\n  /* eslint-disable class-methods-use-thiss */\r\n  routes(app) {\r\n    app.get('/', (req, res) => {\r\n      res.status(200).sendFile(path.join(__dirname, './../../../client/index.html'));\r\n    });\r\n    // routes for us\r\n    app.post('/api/v1/auth/signup', usersUpload.single('profile-photo'), this.UsersController.signup);\r\n    app.post('/api/v1/auth/signin', this.UsersController.signin);\r\n    app.get('/api/v1/auth/services', this.UsersController.getServiceName);\r\n\r\n    // admin routes\r\n    app.get('/api/v1/requests', secureRoute, this.AdminController.getAllRequests);\r\n    app.put('/api/v1/requests/:requestId/disapprove', secureRoute, this.AdminController.rejectRequest);\r\n    app.put('/api/v1/requests/:requestId/approve', secureRoute, this.AdminController.approveRequest);\r\n    app.put('/api/v1/requests/:requestId/resolve', secureRoute, this.AdminController.resolveRequest);\r\n\r\n    // user routes\r\n    app.post('/api/v1/users/requests', secureRoute, this.RequestController.addRequest);\r\n    app.get('/api/v1/users/requests/:requestId', secureRoute, this.RequestController.getOneRequest);\r\n    app.get('/api/v1/users/requests', secureRoute, this.RequestController.getAllRequests);\r\n    app.put('/api/v1/users/requests/:requestId', secureRoute, this.RequestController.updateRequest);\r\n    app.delete('/api/v1/users/requests/:requestId', secureRoute, this.RequestController.deleteRequest);\r\n    // routes for contacts model\r\n    app.post('/api/v1/contacts', secureRoute, this.ContactController.addMessage);\r\n    app.get('/api/v1/contacts', secureRoute, this.ContactController.getMessages);\r\n  }\r\n};\r\n\r\nexport default Routes;\r\n"]}