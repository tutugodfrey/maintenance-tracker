{"version":3,"sources":["../../src/test/adminTest.js"],"names":["expect","chai","use","chaiHttp","signedInUser","describe","it","request","app","post","send","username","adminUser","password","then","res","Object","assign","body","to","have","status","be","an","property","token","a","get","set","length","of","at","least","user","fullname","equal","regularUser1","message","put","createdRequest1","id","eql"],"mappings":"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","file":"adminTest.js","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from './../app';\r\nimport { adminUser, regularUser1 } from './signupTest';\r\nimport { createdRequest1 } from './userRequestTest';\r\n\r\nconst { expect } = chai;\r\nchai.use(chaiHttp);\r\nconst signedInUser = {};\r\n\r\nexport default describe('Admin controller test', () => {\r\n  it('should signin a User in and give a token', () => {\r\n    return chai.request(app)\r\n      .post('/api/v1/auth/signin')\r\n      .send({\r\n        username: adminUser.username,\r\n        password: '123456',\r\n      })\r\n      .then((res) => {\r\n        Object.assign(signedInUser, res.body);\r\n        expect(res).to.have.status(200);\r\n        expect(res.body).to.be.an('Object');\r\n        expect(res.body).to.have.property('token');\r\n        expect(res.body.token).to.be.a('string');\r\n      });\r\n  });\r\n\r\n  describe('get all requests method', () => {\r\n    it('should return all request', () => {\r\n      return chai.request(app)\r\n        .get('/api/v1/requests')\r\n        .set('token', signedInUser.token)\r\n        .then((res) => {\r\n          expect(res).to.have.status(200);\r\n          expect(res.body).to.be.an('array');\r\n          expect(res.body).to.have.length.of.at.least(1);\r\n          expect(res.body[0]).to.have.property('request');\r\n          expect(res.body[0]).to.have.property('user');\r\n          expect(res.body[0].user.fullname).to.equal(regularUser1.fullname);\r\n        });\r\n    });\r\n\r\n    it('should return 401 status code for unauthorized user', () => {\r\n      return chai.request(app)\r\n        .get('/api/v1/requests')\r\n        .set('token', regularUser1.token)\r\n        .then((res) => {\r\n          expect(res).to.have.status(401);\r\n          expect(res.body).to.be.an('object')\r\n          expect(res.body).to.have.property('message');\r\n          expect(res.body.message).to.equal('you are not authorized to perform this action');\r\n        });\r\n    });\r\n  });\r\n\r\n  describe('Update requests', () => {\r\n    describe('approve request method', () => {\r\n      it('should update a request status to pending when approved', () => {\r\n        return chai.request(app)\r\n          .put(`/api/v1/requests/${createdRequest1.id}/approve`)\r\n          .set('token', signedInUser.token)\r\n          .then((res) => {\r\n            expect(res).to.have.status(200);\r\n            expect(res.body).to.be.an('object');\r\n            expect(res.body).to.have.property('request');\r\n            expect(res.body).to.have.property('user');\r\n            expect(res.body.request.status).to.equal('pending');\r\n          });\r\n      });\r\n\r\n      it('users should not be able to mark their requests as approve', () => {\r\n        return chai.request(app)\r\n          .put(`/api/v1/requests/${createdRequest1.id}/approve`)\r\n          .set('token', regularUser1.token)\r\n          .then((res) => {\r\n            expect(res).to.have.status(401);\r\n            expect(res.body).to.be.an('object');\r\n            expect(res.body).to.have.property('message');\r\n            expect(res.body.message).to.eql('you are not authorized to perform this action')\r\n          });\r\n      });\r\n\r\n      it('should not update a request that does not exist', () => {\r\n        return chai.request(app)\r\n          .put('/api/v1/requests/10/approve')\r\n          .set('token', signedInUser.token)\r\n          .then((res) => {\r\n            expect(res).to.have.status(404);\r\n            expect(res.body).to.be.an('object');\r\n            expect(res.body).to.have.property('message');\r\n            expect(res.body.message).to.equal('request not found');\r\n          });\r\n      });\r\n\r\n      it('should return bad request if requestId is not set', () => {\r\n        return chai.request(app)\r\n          .put('/api/v1/requests/0/approve')\r\n          .set('token', signedInUser.token)\r\n          .then((res) => {\r\n            expect(res).to.have.status(400);\r\n            expect(res.body).to.be.an('object');\r\n            expect(res.body).to.have.property('message');\r\n            expect(res.body.message).to.equal('missing required field');\r\n          });\r\n      });\r\n    });\r\n\r\n    describe('reject request method', () => {\r\n      it('should reject a request', () => {\r\n        return chai.request(app)\r\n          .put(`/api/v1/requests/${createdRequest1.id}/disapprove`)\r\n          .set('token', signedInUser.token)\r\n          .then((res) => {\r\n            expect(res).to.have.status(200);\r\n            expect(res.body).to.be.an('object');\r\n            expect(res.body).to.have.property('request');\r\n            expect(res.body).to.have.property('user');\r\n            expect(res.body.request.status).to.equal('rejected');\r\n          });\r\n      });\r\n\r\n      it('users should not be able to disapprove a request', () => {\r\n        return chai.request(app)\r\n          .put(`/api/v1/requests/${createdRequest1.id}/disapprove`)\r\n          .set('token', regularUser1.token)\r\n          .then((res) => {\r\n            expect(res).to.have.status(401);\r\n            expect(res.body).to.be.an('object');\r\n            expect(res.body).to.have.property('message');\r\n            expect(res.body.message).to.eql('you are not authorized to perform this action')\r\n          });\r\n      });\r\n\r\n      it('should not update a request that does not exist', () => {\r\n        return chai.request(app)\r\n          .put('/api/v1/requests/10/disapprove')\r\n          .set('token', signedInUser.token)\r\n          .then((res) => {\r\n            expect(res).to.have.status(404);\r\n            expect(res.body).to.be.an('object');\r\n            expect(res.body).to.have.property('message');\r\n            expect(res.body.message).to.equal('request not found');\r\n          });\r\n      });\r\n\r\n      it('should return bad request if requestId is not set', () => {\r\n        return chai.request(app)\r\n          .put('/api/v1/requests/0/disapprove')\r\n          .set('token', signedInUser.token)\r\n          .then((res) => {\r\n            expect(res).to.have.status(400);\r\n            expect(res.body).to.be.an('object');\r\n            expect(res.body).to.have.property('message');\r\n            expect(res.body.message).to.equal('missing required field');\r\n          });\r\n      });\r\n    });\r\n\r\n    describe('resolve request method', () => {\r\n      it('should mark a request as resolve', () => {\r\n        return chai.request(app)\r\n          .put(`/api/v1/requests/${createdRequest1.id}/resolve`)\r\n          .set('token', signedInUser.token)\r\n          .then((res) => {\r\n            expect(res).to.have.status(200);\r\n            expect(res.body).to.be.an('object');\r\n            expect(res.body).to.have.property('request');\r\n            expect(res.body).to.have.property('user');\r\n            expect(res.body.request.status).to.equal('resolved');\r\n          });\r\n      });\r\n\r\n      it('users should not be able to resolve their requests', () => {\r\n        return chai.request(app)\r\n          .put(`/api/v1/requests/${createdRequest1.id}/resolve`)\r\n          .set('token', regularUser1.token)\r\n          .then((res) => {\r\n            expect(res).to.have.status(401);\r\n            expect(res.body).to.be.an('object');\r\n            expect(res.body).to.have.property('message');\r\n            expect(res.body.message).to.eql('you are not authorized to perform this action')\r\n          });\r\n      });\r\n\r\n      it('should not update a request that does not exist', () => {\r\n        return chai.request(app)\r\n          .put('/api/v1/requests/10/resolve')\r\n          .set('token', signedInUser.token)\r\n          .then((res) => {\r\n            expect(res).to.have.status(404);\r\n            expect(res.body).to.be.an('object');\r\n            expect(res.body).to.have.property('message');\r\n            expect(res.body.message).to.equal('request not found');\r\n          });\r\n      });\r\n\r\n      it('should return bad request if requestId is not set', () => {\r\n        return chai.request(app)\r\n          .put('/api/v1/requests/0/resolve')\r\n          .set('token', signedInUser.token)\r\n          .then((res) => {\r\n            expect(res).to.have.status(400);\r\n            expect(res.body).to.be.an('object');\r\n            expect(res.body).to.have.property('message');\r\n            expect(res.body.message).to.equal('missing required field');\r\n          });\r\n      });\r\n    });\r\n  });\r\n});\r\n"]}