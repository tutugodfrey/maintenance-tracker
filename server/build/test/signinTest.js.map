{"version":3,"sources":["../../src/test/signinTest.js"],"names":["expect","chai","use","chaiHttp","signedInUser","describe","it","request","app","post","send","username","regularUser1","password","then","res","Object","assign","body","to","have","status","be","an","property","token","a"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;IAEQA,M,GAAWC,c,CAAXD,M;;AACRC,eAAKC,GAAL,CAASC,kBAAT;AACA,IAAMC,eAAe,EAArB;;kBAEeC,SAAS,QAAT,EAAmB,YAAM;AACtCC,KAAG,0CAAH,EAA+C,YAAM;AACnD,WAAOL,eAAKM,OAAL,CAAaC,aAAb,EACJC,IADI,CACC,qBADD,EAEJC,IAFI,CAEC;AACJC,gBAAUC,yBAAaD,QADnB;AAEJE,gBAAU;AAFN,KAFD,EAMJC,IANI,CAMC,UAACC,GAAD,EAAS;AACbC,aAAOC,MAAP,CAAcb,YAAd,EAA4BW,IAAIG,IAAhC;AACAlB,aAAOe,GAAP,EAAYI,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACArB,aAAOe,IAAIG,IAAX,EAAiBC,EAAjB,CAAoBG,EAApB,CAAuBC,EAAvB,CAA0B,QAA1B;AACAvB,aAAOe,IAAIG,IAAX,EAAiBC,EAAjB,CAAoBC,IAApB,CAAyBI,QAAzB,CAAkC,OAAlC;AACAxB,aAAOe,IAAIG,IAAJ,CAASO,KAAhB,EAAuBN,EAAvB,CAA0BG,EAA1B,CAA6BI,CAA7B,CAA+B,QAA/B;AACD,KAZI,CAAP;AAaD,GAdD;;AAgBApB,KAAG,qDAAH,EAA0D,YAAM;AAC9D,WAAOL,eAAKM,OAAL,CAAaC,aAAb,EACJC,IADI,CACC,qBADD,EAEJC,IAFI,CAEC;AACJC,gBAAUC,yBAAaD,QADnB;AAEJE,gBAAU;AAFN,KAFD,EAMJC,IANI,CAMC,UAACC,GAAD,EAAS;AACbf,aAAOe,GAAP,EAAYI,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACArB,aAAOe,IAAIG,IAAX,EAAiBC,EAAjB,CAAoBG,EAApB,CAAuBC,EAAvB,CAA0B,QAA1B;AACD,KATI,CAAP;AAUD,GAXD;;AAaAjB,KAAG,qDAAH,EAA0D,YAAM;AAC9D,WAAOL,eAAKM,OAAL,CAAaC,aAAb,EACJC,IADI,CACC,qBADD,EAEJC,IAFI,CAEC;AACJC,gBAAU,aADN;AAEJE,gBAAU;AAFN,KAFD,EAMJC,IANI,CAMC,UAACC,GAAD,EAAS;AACbf,aAAOe,GAAP,EAAYI,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACArB,aAAOe,IAAIG,IAAX,EAAiBC,EAAjB,CAAoBG,EAApB,CAAuBC,EAAvB,CAA0B,QAA1B;AACD,KATI,CAAP;AAUD,GAXD;AAYD,CA1Cc,C","file":"signinTest.js","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from './../app';\r\nimport { regularUser1 } from './signupTest';\r\n\r\nconst { expect } = chai;\r\nchai.use(chaiHttp);\r\nconst signedInUser = {};\r\n\r\nexport default describe('Signin', () => {\r\n  it('should signin a User in and give a token', () => {\r\n    return chai.request(app)\r\n      .post('/api/v1/auth/signin')\r\n      .send({\r\n        username: regularUser1.username,\r\n        password: '123456',\r\n      })\r\n      .then((res) => {\r\n        Object.assign(signedInUser, res.body);\r\n        expect(res).to.have.status(200);\r\n        expect(res.body).to.be.an('Object');\r\n        expect(res.body).to.have.property('token');\r\n        expect(res.body.token).to.be.a('string');\r\n      });\r\n  });\r\n\r\n  it('should not signin a user if password is not correct', () => {\r\n    return chai.request(app)\r\n      .post('/api/v1/auth/signin')\r\n      .send({\r\n        username: regularUser1.username,\r\n        password: '134567',\r\n      })\r\n      .then((res) => {\r\n        expect(res).to.have.status(401);\r\n        expect(res.body).to.be.an('Object');\r\n      });\r\n  });\r\n\r\n  it('should not signin a user if username is not correct', () => {\r\n    return chai.request(app)\r\n      .post('/api/v1/auth/signin')\r\n      .send({\r\n        username: 'someoneelse',\r\n        password: '123456',\r\n      })\r\n      .then((res) => {\r\n        expect(res).to.have.status(401);\r\n        expect(res.body).to.be.an('Object');\r\n      });\r\n  });\r\n});\r\n"]}