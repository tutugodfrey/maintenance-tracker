{"version":3,"sources":["../../src/test/signupTest.js"],"names":["expect","chai","use","chaiHttp","adminUser","regularUser1","regularUser2","regularUser3","describe","it","request","app","post","set","field","attach","then","res","Object","assign","body","to","have","status","be","an","property","token","a","username","equal","email","isAdmin","password","not","imgUrl","serviceName","message","eql"],"mappings":"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","file":"signupTest.js","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from './../app';\r\n\r\nconst { expect } = chai;\r\nchai.use(chaiHttp);\r\nconst adminUser = {};\r\nconst regularUser1 = {};\r\nconst regularUser2 = {};\r\nconst regularUser3 = {};\r\n\r\nexport default describe('Users controller', () => {\r\n  describe('signup method', () => {\r\n    it('should create new admin user', () => {\r\n      return chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Content-Type', 'multipart/form-data')\r\n        .field('fullname', 'john doe')\r\n        .field('username', 'johnd')\r\n        .field('email', 'johnd@yahoo.com')\r\n        .field('address', 'market road')\r\n        .field('phone', '07011111111')\r\n        .field('serviceName', 'mk services')\r\n        .field('password', '123456')\r\n        .field('confirmPassword', '123456')\r\n        .field('isAdmin', 'true')\r\n        .attach('profile-photo', './fileuploads/tutug.jpeg') \r\n        .then((res) => {\r\n          Object.assign(adminUser, res.body);\r\n          expect(res).to.have.status(201);\r\n          expect(res.body).to.be.an('Object');\r\n          expect(res.body).to.have.property('token');\r\n          expect(res.body.token).to.be.a('string');\r\n          expect(res.body.username).to.equal('johnd');\r\n          expect(res.body.email).to.equal('johnd@yahoo.com');\r\n          expect(res.body.isAdmin).to.equal(true);\r\n        });\r\n    });\r\n\r\n    it('should create new regular user', () => {\r\n      return chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Content-Type', 'multipart/form-data')\r\n        .field('fullname', 'brain walter')\r\n        .field('username', 'walterb')\r\n        .field('email', 'walterb@yahoo.com')\r\n        .field('address', 'market road')\r\n        .field('phone', '07011111111')\r\n        .field('serviceName', '')\r\n        .field('password', '123456')\r\n        .field('confirmPassword', '123456')\r\n        .field('isAdmin', '')\r\n        .attach('profile-photo', './fileuploads/tutug.jpeg')\r\n        .then((res) => {\r\n          Object.assign(regularUser1, res.body);\r\n          expect(res).to.have.status(201);\r\n          expect(res.body).to.be.an('Object');\r\n          expect(res.body).to.have.property('token');\r\n          expect(res.body.token).to.be.a('string');\r\n          expect(res.body.username).to.equal('walterb');\r\n          expect(res.body.isAdmin).to.equal(false);\r\n        });\r\n    });\r\n\r\n    it('file submission should be optional', () => {\r\n      return chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Content-Type', 'multipart/form-data')\r\n        .field('fullname', 'ryan bob')\r\n        .field('username', 'ryanb')\r\n        .field('email', 'raynb@yahoo.com')\r\n        .field('address', 'market road')\r\n        .field('phone', '07011111111')\r\n        .field('serviceName', '')\r\n        .field('password', '123456')\r\n        .field('confirmPassword', '123456')\r\n        .field('isAdmin', '')\r\n        .attach('profile-photo', '')\r\n        .then((res) => {\r\n          Object.assign(regularUser2, res.body);\r\n          expect(res).to.have.status(201);\r\n          expect(res.body).to.be.an('Object');\r\n          expect(res.body.password).to.not.equal('123456');\r\n          expect(res.body.imgUrl).to.equal('/users-photo/default.png');\r\n        });\r\n    });\r\n\r\n    it('serviceName should be undefined if isAdmin is false', () => {\r\n      return chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Content-Type', 'multipart/form-data')\r\n        .field('fullname', 'brain walter')\r\n        .field('username', 'walterbr')\r\n        .field('email', 'walterbr@yahoo.com')\r\n        .field('address', 'market road')\r\n        .field('phone', '07011111111')\r\n        .field('serviceName', 'somesericename')\r\n        .field('password', '123456')\r\n        .field('confirmPassword', '123456')\r\n        .field('isAdmin', '')\r\n        .attach('profile-photo', './fileuploads/tutug.jpeg')\r\n        .then((res) => {\r\n          Object.assign(regularUser3, res.body);\r\n          expect(res).to.have.status(201);\r\n          expect(res.body).to.be.an('Object');\r\n          expect(res.body).to.have.property('token')\r\n          expect(res.body.isAdmin).to.equal(false);\r\n          expect(res.body.serviceName).to.equal('');\r\n        });\r\n    });\r\n\r\n    it('should not create a user if username already exist', () => {\r\n      return chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Content-Type', 'multipart/form-data')\r\n        .field('fullname', 'walter brain')\r\n        .field('username', 'walterb')\r\n        .field('email', 'walterb@yahoo.com')\r\n        .field('address', 'market road')\r\n        .field('phone', '07011111111')\r\n        .field('serviceName', 'mk services')\r\n        .field('password', '123456')\r\n        .field('confirmPassword', '123456')\r\n        .field('isAdmin', 'false')\r\n        .attach('profile-photo', './fileuploads/tutug.jpeg')\r\n        .then((res) => {\r\n          expect(res).to.have.status(409);\r\n          expect(res.body).to.be.an('Object');\r\n          expect(res.body).to.have.property('message')\r\n          expect(res.body.message).to.equal('user already exist');\r\n        });\r\n    });\r\n\r\n    it('email should be unique ', () => {\r\n      return chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Content-Type', 'multipart/form-data')\r\n        .field('fullname', 'brain walter')\r\n        .field('username', 'walterbr')\r\n        .field('email', 'walterb@yahoo.com')\r\n        .field('address', 'market road')\r\n        .field('phone', '07011111111')\r\n        .field('serviceName', 'mk services')\r\n        .field('password', '123456')\r\n        .field('confirmPassword', '123456')\r\n        .field('isAdmin', 'false')\r\n        .attach('profile-photo', './fileuploads/tutug.jpeg')\r\n        .then((res) => {\r\n          expect(res).to.have.status(409);\r\n          expect(res.body).to.be.an('Object');\r\n          expect(res.body).to.have.property('message')\r\n          expect(res.body.message).to.equal('user already exist');\r\n        });\r\n    });\r\n\r\n    it('should not create a user without username', () => {\r\n      return chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Content-Type', 'multipart/form-data')\r\n        .field('fullname', 'brain walter')\r\n        .field('username', '')\r\n        .field('email', 'walterb@yahoo.com')\r\n        .field('address', 'user address')\r\n        .field('phone', '07011111111')\r\n        .field('serviceName', 'mk services')\r\n        .field('password', '123456')\r\n        .field('confirmPassword', '123456')\r\n        .field('isAdmin', 'false')\r\n        .attach('profile-photo', './fileuploads/tutug.jpeg')\r\n        .then((res) => {\r\n          expect(res).to.have.status(400);\r\n          expect(res.body).to.be.an('Object');\r\n          expect(res.body).to.have.property('message')\r\n          expect(res.body.message).to.equal('missing required field');\r\n        });\r\n    });\r\n\r\n    it('should not create an admin user if service name is not provided', () => {\r\n      return chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Content-Type', 'multipart/form-data')\r\n        .field('fullname', 'brain walter')\r\n        .field('username', '')\r\n        .field('email', 'walterb@yahoo.com')\r\n        .field('address', 'user address')\r\n        .field('phone', '07011111111')\r\n        .field('serviceName', '')\r\n        .field('password', '123456')\r\n        .field('confirmPassword', '123456')\r\n        .field('isAdmin', 'true')\r\n        .attach('profile-photo', './fileuploads/tutug.jpeg')\r\n        .then((res) => {\r\n          expect(res).to.have.status(400);\r\n          expect(res.body).to.be.an('Object');\r\n          expect(res.body).to.have.property('message')\r\n          expect(res.body.message).to.equal('missing required field');\r\n        });\r\n    });\r\n\r\n    it('should not create a user without email', () => {\r\n      return chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Content-Type', 'multipart/form-data')\r\n        .field('fullname', 'brain walter')\r\n        .field('username', 'walterbr')\r\n        .field('email', '')\r\n        .field('address', 'user address')\r\n        .field('phone', '07011111111')\r\n        .field('serviceName', 'mk services')\r\n        .field('password', '123456')\r\n        .field('confirmPassword', '123456')\r\n        .field('isAdmin', 'false')\r\n        .attach('profile-photo', './fileuploads/tutug.jpeg')\r\n        .then((res) => {\r\n          expect(res).to.have.status(400);\r\n          expect(res.body).to.be.an('Object');\r\n          expect(res.body).to.have.property('message')\r\n          expect(res.body.message).to.equal('missing required field');\r\n        });\r\n    });\r\n\r\n    it('should not create a user if email format is wrong', () => {\r\n      return chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Content-Type', 'multipart/form-data')\r\n        .field('fullname', 'brain walter')\r\n        .field('username', 'walterbr')\r\n        .field('email', 'walterb@youcom')\r\n        .field('address', 'user address')\r\n        .field('phone', '07011111111')\r\n        .field('serviceName', 'mk services')\r\n        .field('password', '123456')\r\n        .field('confirmPassword', '123456')\r\n        .field('isAdmin', 'false')\r\n        .attach('profile-photo', './fileuploads/tutug.jpeg')\r\n        .then((res) => {\r\n          expect(res).to.have.status(400);\r\n          expect(res.body).to.be.an('Object');\r\n          expect(res.body).to.have.property('message')\r\n          expect(res.body.message).to.equal('typeError: invalid email format');\r\n        });\r\n    });\r\n\r\n    it('should not create a user without phone number', () => {\r\n      return chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Content-Type', 'multipart/form-data')\r\n        .field('fullname', 'brain walter')\r\n        .field('username', 'walterbr')\r\n        .field('email', 'walterb@yahoo.com')\r\n        .field('address', 'market road')\r\n        .field('phone', '')\r\n        .field('serviceName', 'mk services')\r\n        .field('password', '123456')\r\n        .field('confirmPassword', '123456')\r\n        .field('isAdmin', 'false')\r\n        .attach('profile-photo', './fileuploads/tutug.jpeg')\r\n        .then((res) => {\r\n          expect(res).to.have.status(400);\r\n          expect(res.body).to.be.an('Object');\r\n          expect(res.body).to.have.property('message')\r\n          expect(res.body.message).to.equal('missing required field');\r\n        });\r\n    });\r\n\r\n    it('should not create a user without address', () => {\r\n      return chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Content-Type', 'multipart/form-data')\r\n        .field('fullname', 'brain walter')\r\n        .field('username', 'walterbr')\r\n        .field('email', 'walterb@yahoo.com')\r\n        .field('address', '')\r\n        .field('phone', '07011111111')\r\n        .field('serviceName', 'mk services')\r\n        .field('password', '123456')\r\n        .field('confirmPassword', '123456')\r\n        .field('isAdmin', 'false')\r\n        .attach('profile-photo', './fileuploads/tutug.jpeg')\r\n        .then((res) => {\r\n          expect(res).to.have.status(400);\r\n          expect(res.body).to.be.an('Object');\r\n          expect(res.body).to.have.property('message')\r\n          expect(res.body.message).to.equal('missing required field');\r\n        });\r\n    });\r\n\r\n    it('password, confirm-password should match', () => {\r\n      return chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Content-Type', 'multipart/form-data')\r\n        .field('fullname', 'brain walter')\r\n        .field('username', 'walterbr')\r\n        .field('email', 'walterbr@yahoo.com')\r\n        .field('address', 'market road')\r\n        .field('phone', '07011111111')\r\n        .field('serviceName', '')\r\n        .field('password', '1234567')\r\n        .field('confirmPassword', '123456')\r\n        .field('isAdmin', '')\r\n        .attach('profile-photo', './fileuploads/tutug.jpeg')\r\n        .then((res) => {\r\n          expect(res).to.have.status(400);\r\n          expect(res.body).to.be.an('Object');\r\n          expect(res.body).to.eql({ message: 'password does not match' });\r\n        });\r\n    });\r\n    it('length of password or comfirmPassword should be >= 6', () => {\r\n      return chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Content-Type', 'multipart/form-data')\r\n        .field('fullname', 'brain walter')\r\n        .field('username', 'walterbr')\r\n        .field('email', 'walterbr@yahoo.com')\r\n        .field('address', 'market road')\r\n        .field('phone', '07011111111')\r\n        .field('serviceName', '')\r\n        .field('password', '12345')\r\n        .field('confirmPassword', '123456')\r\n        .field('isAdmin', '')\r\n        .attach('profile-photo', './fileuploads/tutug.jpeg')\r\n        .then((res) => {\r\n          expect(res).to.have.status(400);\r\n          expect(res.body).to.be.an('Object');\r\n          expect(res.body).to.eql({ message: 'length of password must not be less than 6' });\r\n        });\r\n    });\r\n  });\r\n});\r\n\r\nexport {\r\n  adminUser,\r\n  regularUser1,\r\n  regularUser2,\r\n};\r\n"]}