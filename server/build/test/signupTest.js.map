{"version":3,"sources":["../../src/test/signupTest.js"],"names":["server","Server","app","expressServer","expect","chai","use","chaiHttp","adminUser","regularUser1","regularUser2","describe","it","request","post","set","field","attach","then","res","Object","assign","body","to","have","status","be","an","isAdmin","equal","password","not","eql","message"],"mappings":"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","file":"signupTest.js","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport Server from './../app';\r\n\r\nconst server = new Server();\r\nconst app = server.expressServer();\r\nconst { expect } = chai;\r\nchai.use(chaiHttp);\r\nconst adminUser = {};\r\nconst regularUser1 = {};\r\nconst regularUser2 = {};\r\n\r\nexport default describe('Users controller', () => {\r\n  describe('signup method', () => {\r\n    it('should create new admin user', () => {\r\n      return chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Content-Type', 'multipart/form-data')\r\n        .field('fullname', 'john doe')\r\n        .field('username', 'johnd')\r\n        .field('email', 'johnd@yahoo.com')\r\n        .field('address', 'market road')\r\n        .field('serviceName', 'mk services')\r\n        .field('password', '123456')\r\n        .field('confirmPassword', '123456')\r\n        .field('isAdmin', 'true')\r\n        .attach('profile-photo', './fileuploads/tutug.jpeg')\r\n        .then((res) => {\r\n          Object.assign(adminUser, res.body);\r\n          expect(res).to.have.status(201);\r\n          expect(res.body).to.be.an('Object');\r\n          expect(res.body.isAdmin).to.equal(true);\r\n        });\r\n    });\r\n\r\n    it('should create new regular user', () => {\r\n      return chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Content-Type', 'multipart/form-data')\r\n        .field('fullname', 'brain walter')\r\n        .field('username', 'walterb')\r\n        .field('email', 'walterb@yahoo.com')\r\n        .field('address', 'market road')\r\n        .field('serviceName', '')\r\n        .field('password', '123456')\r\n        .field('confirmPassword', '123456')\r\n        .field('isAdmin', '')\r\n        .attach('profile-photo', './fileuploads/tutug.jpeg')\r\n        .then((res) => {\r\n          Object.assign(regularUser1, res.body);\r\n          expect(res).to.have.status(201);\r\n          expect(res.body).to.be.an('Object');\r\n        });\r\n    });\r\n\r\n    it('file submission should be optional', () => {\r\n      return chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Content-Type', 'multipart/form-data')\r\n        .field('fullname', 'ryan bob')\r\n        .field('username', 'ryanb')\r\n        .field('email', 'raynb@yahoo.com')\r\n        .field('address', 'market road')\r\n        .field('serviceName', '')\r\n        .field('password', '123456')\r\n        .field('confirmPassword', '123456')\r\n        .field('isAdmin', '')\r\n        .attach('profile-photo', '')\r\n        .then((res) => {\r\n          Object.assign(regularUser2, res.body);\r\n          expect(res).to.have.status(201);\r\n          expect(res.body).to.be.an('Object');\r\n          expect(res.body.password).to.not.equal('1234');\r\n        });\r\n    });\r\n\r\n    it('username should be unique ', () => {\r\n      return chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Content-Type', 'multipart/form-data')\r\n        .field('fullname', 'walter brain')\r\n        .field('username', 'walterb')\r\n        .field('email', 'walterb@yahoo.com')\r\n        .field('address', 'market road')\r\n        .field('serviceName', 'mk services')\r\n        .field('password', '123456')\r\n        .field('confirmPassword', '123456')\r\n        .field('isAdmin', 'false')\r\n        .attach('profile-photo', './fileuploads/tutug.jpeg')\r\n        .then((res) => {\r\n          expect(res).to.have.status(409);\r\n          expect(res.body).to.be.an('Object');\r\n          expect(res.body).to.eql({ message: 'user already exist' });\r\n        });\r\n    });\r\n\r\n    it('email should be unique ', () => {\r\n      return chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Content-Type', 'multipart/form-data')\r\n        .field('fullname', 'brain walter')\r\n        .field('username', 'walterbr')\r\n        .field('email', 'walterb@yahoo.com')\r\n        .field('address', 'market road')\r\n        .field('serviceName', 'mk services')\r\n        .field('password', '123456')\r\n        .field('confirmPassword', '123456')\r\n        .field('isAdmin', 'false')\r\n        .attach('profile-photo', './fileuploads/tutug.jpeg')\r\n        .then((res) => {\r\n          expect(res).to.have.status(409);\r\n          expect(res.body).to.be.an('Object');\r\n          expect(res.body).to.eql({ message: 'user already exist' });\r\n        });\r\n    });\r\n\r\n    it('password, confirm-password should match', () => {\r\n      return chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Content-Type', 'multipart/form-data')\r\n        .field('fullname', 'brain walter')\r\n        .field('username', 'walterbr')\r\n        .field('email', 'walterbr@yahoo.com')\r\n        .field('address', 'market road')\r\n        .field('serviceName', '')\r\n        .field('password', '1234567')\r\n        .field('confirmPassword', '123456')\r\n        .field('isAdmin', '')\r\n        .attach('profile-photo', './fileuploads/tutug.jpeg')\r\n        .then((res) => {\r\n          expect(res).to.have.status(400);\r\n          expect(res.body).to.be.an('Object');\r\n          expect(res.body).to.eql({ message: 'password does not match' });\r\n        });\r\n    });\r\n    it('length of password or comfirmPassword should be >= 6', () => {\r\n      return chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Content-Type', 'multipart/form-data')\r\n        .field('fullname', 'brain walter')\r\n        .field('username', 'walterbr')\r\n        .field('email', 'walterbr@yahoo.com')\r\n        .field('address', 'market road')\r\n        .field('serviceName', '')\r\n        .field('password', '12345')\r\n        .field('confirmPassword', '123456')\r\n        .field('isAdmin', '')\r\n        .attach('profile-photo', './fileuploads/tutug.jpeg')\r\n        .then((res) => {\r\n          expect(res).to.have.status(400);\r\n          expect(res.body).to.be.an('Object');\r\n          expect(res.body).to.eql({ message: 'length of password must not be less than 6' });\r\n        });\r\n    });\r\n  });\r\n});\r\n\r\nexport {\r\n  adminUser,\r\n  regularUser1,\r\n  regularUser2,\r\n};\r\n"]}