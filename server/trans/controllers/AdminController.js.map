{"version":3,"sources":["../../src/controllers/AdminController.js"],"names":["requests","models","AdminController","req","res","isAdmin","query","status","send","message","findAll","then","allRequests","catch","error","requestId","parseInt","params","findById","request","update","updatedRequest"],"mappings":"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","file":"AdminController.js","sourcesContent":["\r\nimport models from './../models/index';\r\n\r\nconst { requests } = models;\r\nconst AdminController = class {\r\n  // get all request for a logged in user\r\n  static getAllRequests(req, res) {\r\n    const { isAdmin } = req.query;\r\n    if (isAdmin !== 'true') {\r\n      return res.status(402).send({ message: 'missing required field' });\r\n    }\r\n    return requests\r\n      .findAll()\r\n      .then(allRequests => res.status(200).send(allRequests))\r\n      .catch(error => res.status(500).send(error));\r\n  }\r\n\r\n  static rejectRequest(req, res) {\r\n    const requestId = parseInt(req.params.requestId, 10);\r\n    const { isAdmin } = req.query;\r\n    if (isAdmin !== 'true') {\r\n      return res.status(402).send({ message: 'you are not permitted to perform this action' });\r\n    }\r\n    if (isAdmin !== 'true' || !requestId) {\r\n      return res.status(400).send({ message: 'missiging required field' });\r\n    }\r\n    return requests\r\n      .findById(requestId)\r\n      .then((request) => {\r\n        return requests\r\n          .update(\r\n            request,\r\n            {\r\n              status: 'rejected',\r\n            },\r\n          )\r\n          .then(updatedRequest => res.status(200).send(updatedRequest));\r\n      })\r\n      .catch(error => res.status(404).send(error));\r\n  }\r\n\r\n  static approveRequest(req, res) {\r\n    const requestId = parseInt(req.params.requestId, 10);\r\n    const { isAdmin } = req.query;\r\n    if (isAdmin !== 'true') {\r\n      return res.status(402).send({ message: 'you are not permitted to perform this action' });\r\n    }\r\n    if (!requestId) {\r\n      return res.status(400).send({ message: 'missiging required field' });\r\n    }\r\n    return requests\r\n      .findById(requestId)\r\n      .then((request) => {\r\n        return requests\r\n          .update(\r\n            request,\r\n            {\r\n              status: 'pending',\r\n            },\r\n          )\r\n          .then(updatedRequest => res.status(200).send(updatedRequest));\r\n      })\r\n      .catch(error => res.status(404).send(error));\r\n  }\r\n\r\n  static resolveRequest(req, res) {\r\n    const requestId = parseInt(req.params.requestId, 10);\r\n    const { isAdmin } = req.query;\r\n    if (isAdmin !== 'true') {\r\n      return res.status(402).send({ message: 'you are not permitted to perform this action' });\r\n    }\r\n    if (isAdmin !== 'true' || !requestId) {\r\n      return res.status(400).send({ message: 'missiging required field' });\r\n    }\r\n    return requests\r\n      .findById(requestId)\r\n      .then((request) => {\r\n        return requests\r\n          .update(\r\n            request,\r\n            {\r\n              status: 'resolved',\r\n            },\r\n          )\r\n          .then(updatedRequest => res.status(200).send(updatedRequest));\r\n      })\r\n      .catch(error => res.status(404).send(error));\r\n  }\r\n};\r\nexport default AdminController;\r\n"]}