{"version":3,"sources":["../../src/controllers/ContactController.js"],"names":["users","models","contacts","ContactController","req","res","body","userId","senderId","adminId","title","message","parseInt","status","send","trim","findById","then","user","create","newMessage","catch","error","query","isAdmin","findAll","messages","where"],"mappings":"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","file":"ContactController.js","sourcesContent":["import models from './../models/index';\r\n\r\nconst { users, contacts } = models;\r\nconst ContactController = class {\r\n  // create a new message\r\n  static addMessage(req, res) {\r\n    const {\r\n      userId,\r\n      senderId,\r\n      adminId,\r\n      title,\r\n      message,\r\n    } = req.body;\r\n    if (!parseInt(userId, 10) || !parseInt(adminId, 10) || !parseInt(senderId, 10)) {\r\n      return res.status(400).send({ message: 'missing required field' });\r\n    }\r\n    if (message.trim() === '' || title.trim() === '') {\r\n      return res.status(400).send({ message: 'missing required field' });\r\n    }\r\n    return users\r\n      .findById(senderId)\r\n      .then((user) => {\r\n        return contacts\r\n          .create({\r\n            userId,\r\n            adminId,\r\n            senderId,\r\n            message,\r\n            title,\r\n          })\r\n          .then((newMessage) => {\r\n            res.status(201).send({\r\n              newMessage,\r\n              user,\r\n            });\r\n          })\r\n          .catch(error => res.status(400).send(error));\r\n      })\r\n      .catch(error => res.status(404).send(error));\r\n  }\r\n\r\n  static getMessages(req, res) {\r\n    const userId = parseInt(req.query.userId, 10);\r\n    const { isAdmin } = req.query;\r\n    if (!(userId || isAdmin)) {\r\n      return res.status(400).send({ message: 'missing required field' });\r\n    }\r\n    if (isAdmin === 'true') {\r\n      return contacts\r\n        .findAll()\r\n        .then(messages => res.status(200).send(messages))\r\n        .catch(error => res.status(500).send(error));\r\n    }\r\n    return contacts\r\n      .findAll({\r\n        where: {\r\n          userId,\r\n        },\r\n      })\r\n      .then(messages => res.status(200).send(messages))\r\n      .catch(error => res.status(500).send(error));\r\n  }\r\n};\r\n\r\nexport default ContactController;\r\n"]}