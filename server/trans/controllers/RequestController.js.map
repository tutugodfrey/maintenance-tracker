{"version":3,"sources":["../../src/controllers/RequestController.js"],"names":["requests","models","users","RequestController","req","res","userId","parseInt","body","description","status","send","message","findById","then","user","create","request","catch","error","requestId","params","find","where","id","findAll","allRequests","update","category","department","urgency","newRequest"],"mappings":"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","file":"RequestController.js","sourcesContent":["\r\nimport models from './../models/index';\r\n\r\nconst { requests, users } = models;\r\nconst RequestController = class {\r\n  /* eslint-disable class-methods-use-this */\r\n  // add a new event center\r\n  addRequest(req, res) {\r\n    const userId = parseInt(req.body.userId, 10);\r\n    if (!(req.body.userId) || !(req.body.description)) {\r\n      return res.status(400).send({ message: 'missing required field' });\r\n    }\r\n    return users.findById(userId)\r\n      .then((user) => {\r\n        return requests\r\n          .create(req.body)\r\n          .then((request) => {\r\n            return res.status(201).send({\r\n              request,\r\n              user,\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            return res.status(400).send(error);\r\n          });\r\n      })\r\n      .catch(error => res.status(404).send(error));\r\n  }\r\n\r\n  // get a signle requests for a logged in user\r\n  getOneRequest(req, res) {\r\n    const requestId = parseInt(req.params.requestId, 10);\r\n    if (!requestId) {\r\n      return res.status(400).send({ message: 'missing required field' });\r\n    }\r\n    return requests\r\n      .find({\r\n        where: {\r\n          id: requestId,\r\n        },\r\n      })\r\n      .then(request => res.status(200).send(request))\r\n      .catch(error => res.status(404).send(error));\r\n  }\r\n\r\n  // get all request for a logged in user\r\n  getAllRequests(req, res) {\r\n    return requests\r\n      .findAll()\r\n      .then(allRequests => res.status(200).send(allRequests))\r\n      .catch(error => res.status(404).send(error));\r\n  }\r\n\r\n  // update a request\r\n  updateRequest(req, res) {\r\n    const requestId = parseInt(req.params.requestId, 10);\r\n    if (!requestId) {\r\n      return res.status(400).send({ message: 'missing required field' });\r\n    }\r\n    return requests\r\n      .findById(requestId)\r\n      .then((request) => {\r\n        return requests\r\n          .update(\r\n            request,\r\n            {\r\n              category: req.body.category || request.category,\r\n              description: req.body.description || request.description,\r\n              department: req.body.department || request.department,\r\n              urgency: req.body.urgency || request.urgency,\r\n              status: req.body.status || request.status,\r\n            },\r\n          )\r\n          .then(newRequest => res.status(200).send(newRequest))\r\n          .catch(error => res.status(400).send(error));\r\n      })\r\n      .catch(error => res.status(404).send(error));\r\n  }\r\n};\r\nexport default RequestController;\r\n"]}