{"version":3,"sources":["../../src/helpers/HelperFuncts.js"],"names":["HelperFuncts","path","newPath","replace","indexOf","indexOfPublic","relPath","substr","length"],"mappings":";;;;;;;;;;AAAA;;;AAGA,IAAMA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,8BACaC,IADb,EACmB;AACrB,UAAI,OAAQA,IAAR,KAAkB,QAAtB,EAAgC;AAC9B,eAAO,+BAAP;AACD;AACD,UAAMC,UAAUD,KAAKE,OAAL,CAAa,KAAb,EAAoB,GAApB,CAAhB;AACA,UAAID,QAAQE,OAAR,CAAgB,GAAhB,IAAuB,CAA3B,EAA8B;AAC5B,sCAA4BF,OAA5B;AACD;AACD,UAAMG,gBAAgBH,QAAQE,OAAR,CAAgB,GAAhB,CAAtB;AACA,UAAME,UAAUJ,QAAQK,MAAR,CAAeF,aAAf,EAA8BH,QAAQM,MAAtC,CAAhB;AACA,aAAOF,OAAP;AACD;AAZG;;AAAA;AAAA,GAAN;kBAceN,Y","file":"HelperFuncts.js","sourcesContent":["/*\r\n* export a class for working with objects\r\n*/\r\nconst HelperFuncts = class {\r\n  static getImgUrl(path) {\r\n    if (typeof (path) !== 'string') {\r\n      return 'expected a string as argument';\r\n    }\r\n    const newPath = path.replace(/\\\\/g, '/');\r\n    if (newPath.indexOf('/') < 0) {\r\n      return `Cant resolve path ${newPath}`;\r\n    }\r\n    const indexOfPublic = newPath.indexOf('/');\r\n    const relPath = newPath.substr(indexOfPublic, newPath.length);\r\n    return relPath;\r\n  }\r\n};\r\nexport default HelperFuncts;\r\n"]}