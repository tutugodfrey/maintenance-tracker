{"version":3,"sources":["../../src/routes/index.js"],"names":["Routes","UsersController","RequestController","ContactController","AdminController","app","get","req","res","status","send","message","post","usersUpload","single","signup","signin","secureRoute","getAllRequests","put","rejectRequest","approveRequest","resolveRequest","addRequest","getOneRequest","updateRequest","delete","deleteRequest","addMessage","getMessages"],"mappings":";;;;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;AAEA;AACA,IAAMA;AACJ,oBAAc;AAAA;;AACZ,SAAKC,eAAL,GAAuBA,yBAAvB;AACA,SAAKC,iBAAL,GAAyBA,2BAAzB;AACA,SAAKC,iBAAL,GAAyBA,2BAAzB;AACA,SAAKC,eAAL,GAAuBA,yBAAvB;AACD;AACD;;;AAPI;AAAA;AAAA,2BAQGC,GARH,EAQQ;AACVA,UAAIC,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,YAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,qCAAX,EAArB;AACD,OAFD;;AAKA;AACAN,UAAIO,IAAJ,CAAS,qBAAT,EAAgCC,wBAAYC,MAAZ,CAAmB,eAAnB,CAAhC,EAAqE,KAAKb,eAAL,CAAqBc,MAA1F;AACAV,UAAIO,IAAJ,CAAS,qBAAT,EAAgC,KAAKX,eAAL,CAAqBe,MAArD;;AAEA;AACAX,UAAIC,GAAJ,CAAQ,kBAAR,EAA4BW,qBAA5B,EAAyC,KAAKb,eAAL,CAAqBc,cAA9D;AACAb,UAAIc,GAAJ,CAAQ,wCAAR,EAAkDF,qBAAlD,EAA+D,KAAKb,eAAL,CAAqBgB,aAApF;AACAf,UAAIc,GAAJ,CAAQ,qCAAR,EAA+CF,qBAA/C,EAA4D,KAAKb,eAAL,CAAqBiB,cAAjF;AACAhB,UAAIc,GAAJ,CAAQ,qCAAR,EAA+CF,qBAA/C,EAA4D,KAAKb,eAAL,CAAqBkB,cAAjF;;AAEA;AACAjB,UAAIO,IAAJ,CAAS,wBAAT,EAAmCK,qBAAnC,EAAgD,KAAKf,iBAAL,CAAuBqB,UAAvE;AACAlB,UAAIC,GAAJ,CAAQ,mCAAR,EAA6CW,qBAA7C,EAA0D,KAAKf,iBAAL,CAAuBsB,aAAjF;AACAnB,UAAIC,GAAJ,CAAQ,wBAAR,EAAkCW,qBAAlC,EAA+C,KAAKf,iBAAL,CAAuBgB,cAAtE;AACAb,UAAIc,GAAJ,CAAQ,mCAAR,EAA6CF,qBAA7C,EAA0D,KAAKf,iBAAL,CAAuBuB,aAAjF;AACApB,UAAIqB,MAAJ,CAAW,mCAAX,EAAgDT,qBAAhD,EAA6D,KAAKf,iBAAL,CAAuByB,aAApF;AACA;AACAtB,UAAIO,IAAJ,CAAS,kBAAT,EAA6BK,qBAA7B,EAA0C,KAAKd,iBAAL,CAAuByB,UAAjE;AACAvB,UAAIC,GAAJ,CAAQ,kBAAR,EAA4BW,qBAA5B,EAAyC,KAAKd,iBAAL,CAAuB0B,WAAhE;AACD;AAjCG;;AAAA;AAAA,GAAN;;kBAoCe7B,M","file":"index.js","sourcesContent":["\r\nimport UsersController from './../controllers/UsersController';\r\nimport RequestController from './../controllers/RequestController';\r\nimport ContactController from './../controllers/ContactController';\r\nimport AdminController from './../controllers/AdminController';\r\nimport { secureRoute } from './../middlewares/getToken';\r\nimport { usersUpload } from './../middlewares/uploadfile';\r\n\r\n// const requestController = new RequestController();\r\nconst Routes = class {\r\n  constructor() {\r\n    this.UsersController = UsersController;\r\n    this.RequestController = RequestController;\r\n    this.ContactController = ContactController;\r\n    this.AdminController = AdminController;\r\n  }\r\n  /* eslint-disable class-methods-use-thiss */\r\n  routes(app) {\r\n    app.get('/', (req, res) => {\r\n      res.status(200).send({ message: 'welcome to the maintenance trackers' });\r\n    });\r\n\r\n\r\n    // routes for us\r\n    app.post('/api/v1/auth/signup', usersUpload.single('profile-photo'), this.UsersController.signup);\r\n    app.post('/api/v1/auth/signin', this.UsersController.signin);\r\n\r\n    // admin routes\r\n    app.get('/api/v1/requests', secureRoute, this.AdminController.getAllRequests);\r\n    app.put('/api/v1/requests/:requestId/disapprove', secureRoute, this.AdminController.rejectRequest);\r\n    app.put('/api/v1/requests/:requestId/approve', secureRoute, this.AdminController.approveRequest);\r\n    app.put('/api/v1/requests/:requestId/resolve', secureRoute, this.AdminController.resolveRequest);\r\n\r\n    // user routes\r\n    app.post('/api/v1/users/requests', secureRoute, this.RequestController.addRequest);\r\n    app.get('/api/v1/users/requests/:requestId', secureRoute, this.RequestController.getOneRequest);\r\n    app.get('/api/v1/users/requests', secureRoute, this.RequestController.getAllRequests);\r\n    app.put('/api/v1/users/requests/:requestId', secureRoute, this.RequestController.updateRequest);\r\n    app.delete('/api/v1/users/requests/:requestId', secureRoute, this.RequestController.deleteRequest);\r\n    // routes for contacts model\r\n    app.post('/api/v1/contacts', secureRoute, this.ContactController.addMessage);\r\n    app.get('/api/v1/contacts', secureRoute, this.ContactController.getMessages);\r\n  }\r\n};\r\n\r\nexport default Routes;\r\n"]}