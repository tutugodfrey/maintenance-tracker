{"version":3,"sources":["../../src/test/adminTest.js"],"names":["console","log","adminUser","server","Server","app","expressServer","expect","chai","use","chaiHttp","signedInUser","describe","it","request","post","send","username","password","then","res","Object","assign","body","to","have","status","be","an","property","token","a","get","set","length","of","at","least"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;AACAA,QAAQC,GAAR,CAAYC,qBAAZ;AACA,IAAMC,SAAS,IAAIC,aAAJ,EAAf;AACA,IAAMC,MAAMF,OAAOG,aAAP,EAAZ;IACQC,M,GAAWC,c,CAAXD,M;;AACRC,eAAKC,GAAL,CAASC,kBAAT;AACA,IAAMC,eAAe,EAArB;;kBAEeC,SAAS,YAAT,EAAuB,YAAM;AAC1CC,KAAG,0CAAH,EAA+C,YAAM;AACnD,WAAOL,eAAKM,OAAL,CAAaT,GAAb,EACJU,IADI,CACC,qBADD,EAEJC,IAFI,CAEC;AACJC,gBAAUf,sBAAUe,QADhB;AAEJC,gBAAU;AAFN,KAFD,EAMJC,IANI,CAMC,UAACC,GAAD,EAAS;AACbC,aAAOC,MAAP,CAAcX,YAAd,EAA4BS,IAAIG,IAAhC;AACAhB,aAAOa,GAAP,EAAYI,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAnB,aAAOa,IAAIG,IAAX,EAAiBC,EAAjB,CAAoBG,EAApB,CAAuBC,EAAvB,CAA0B,QAA1B;AACArB,aAAOa,IAAIG,IAAX,EAAiBC,EAAjB,CAAoBC,IAApB,CAAyBI,QAAzB,CAAkC,OAAlC;AACAtB,aAAOa,IAAIG,IAAJ,CAASO,KAAhB,EAAuBN,EAAvB,CAA0BG,EAA1B,CAA6BI,CAA7B,CAA+B,QAA/B;AACD,KAZI,CAAP;AAaD,GAdD;;AAgBAnB,WAAS,iBAAT,EAA4B,YAAM;AAChCC,OAAG,2BAAH,EAAgC,YAAM;AACpC,aAAOL,eAAKM,OAAL,CAAaT,GAAb,EACJ2B,GADI,yCAEJC,GAFI,CAEA,OAFA,EAEStB,aAAamB,KAFtB,EAGJX,IAHI,CAGC,UAACC,GAAD,EAAS;AACbb,eAAOa,GAAP,EAAYI,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAnB,eAAOa,IAAIG,IAAX,EAAiBC,EAAjB,CAAoBG,EAApB,CAAuBC,EAAvB,CAA0B,OAA1B;AACArB,eAAOa,IAAIG,IAAX,EAAiBC,EAAjB,CAAoBC,IAApB,CAAyBS,MAAzB,CAAgCC,EAAhC,CAAmCC,EAAnC,CAAsCC,KAAtC,CAA4C,CAA5C;AACD,OAPI,CAAP;AAQD,KATD;;AAWAxB,OAAG,2BAAH,EAAgC,YAAM;AACpC,aAAOL,eAAKM,OAAL,CAAaT,GAAb,EACJ2B,GADI,0CAEJC,GAFI,CAEA,OAFA,EAEStB,aAAamB,KAFtB,EAGJX,IAHI,CAGC,UAACC,GAAD,EAAS;AACbb,eAAOa,GAAP,EAAYI,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACD,OALI,CAAP;AAMD,KAPD;AAQD,GApBD;AAqBD,CAtCc,C","file":"adminTest.js","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport Server from './../app';\r\nimport { createdRequest1, createdRequest2 } from './userRequestTest';\r\nimport { adminUser } from './signupTest';\r\n//import { regularUser1, regularUser2 } from './signupTest';\r\nconsole.log(adminUser)\r\nconst server = new Server();\r\nconst app = server.expressServer();\r\nconst { expect } = chai;\r\nchai.use(chaiHttp);\r\nconst signedInUser = {};\r\n\r\nexport default describe('Admin Test', () => {\r\n  it('should signin a User in and give a token', () => {\r\n    return chai.request(app)\r\n      .post('/api/v1/auth/signin')\r\n      .send({\r\n        username: adminUser.username,\r\n        password: '1234',\r\n      })\r\n      .then((res) => {\r\n        Object.assign(signedInUser, res.body);\r\n        expect(res).to.have.status(200);\r\n        expect(res.body).to.be.an('Object');\r\n        expect(res.body).to.have.property('token');\r\n        expect(res.body.token).to.be.a('string');\r\n      });\r\n  });\r\n  \r\n  describe('get all request', () => {\r\n    it('should return all request', () => {\r\n      return chai.request(app)\r\n        .get(`/secure/api/v1/requests?isAdmin=true`)\r\n        .set('token', signedInUser.token)\r\n        .then((res) => {\r\n          expect(res).to.have.status(200);\r\n          expect(res.body).to.be.an('array');\r\n          expect(res.body).to.have.length.of.at.least(1);\r\n        });\r\n    });\r\n\r\n    it('should return all request', () => {\r\n      return chai.request(app)\r\n        .get(`/secure/api/v1/requests?isAdmin=false`)\r\n        .set('token', signedInUser.token)\r\n        .then((res) => {\r\n          expect(res).to.have.status(402);\r\n        });\r\n    });\r\n  })\r\n});\r\n"]}